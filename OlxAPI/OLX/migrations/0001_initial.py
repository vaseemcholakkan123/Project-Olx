# Generated by Django 4.2 on 2023-05-11 16:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ad_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.IntegerField()),
                ('image', models.ImageField(upload_to='Ad_Images')),
            ],
        ),
        migrations.CreateModel(
            name='OlxUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile', models.ImageField(null=True, upload_to='profiles')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ScooterAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Mobile', 'Mobile'), ('Properties', 'Properties'), ('Accessory', 'Accessory'), ('Car', 'Car'), ('Scooter', 'Scooter')])),
                ('ad_location', models.CharField(choices=[('Kerala', 'Kerala'), ('Karnataka', 'Karntaka'), ('Tamil Nadu', 'Tamil Nadu')])),
                ('price', models.PositiveIntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('model_name', models.CharField(max_length=50)),
                ('km_driven', models.IntegerField()),
                ('year', models.IntegerField()),
                ('posted_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_images', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='OLX.ad_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PropertyAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Mobile', 'Mobile'), ('Properties', 'Properties'), ('Accessory', 'Accessory'), ('Car', 'Car'), ('Scooter', 'Scooter')])),
                ('ad_location', models.CharField(choices=[('Kerala', 'Kerala'), ('Karnataka', 'Karntaka'), ('Tamil Nadu', 'Tamil Nadu')])),
                ('price', models.PositiveIntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('building_type', models.CharField(choices=[('Apartments', 'Apartments'), ('Builder Floors', 'Builder Floors'), ('Farm Houses', 'Farm Houses'), ('Houses & Villas', 'Houses & Villas')])),
                ('bedrooms', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('bathrooms', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('posted_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_images', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='OLX.ad_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MobileAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Mobile', 'Mobile'), ('Properties', 'Properties'), ('Accessory', 'Accessory'), ('Car', 'Car'), ('Scooter', 'Scooter')])),
                ('ad_location', models.CharField(choices=[('Kerala', 'Kerala'), ('Karnataka', 'Karntaka'), ('Tamil Nadu', 'Tamil Nadu')])),
                ('price', models.PositiveIntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('model_name', models.CharField(max_length=50)),
                ('brand', models.CharField(choices=[('iPhone', 'iPhone'), ('Samsung', 'Samsung'), ('Oppo', 'Oppo'), ('Realme', 'Realme'), ('Vivo', 'Vivo')])),
                ('battery_health', models.IntegerField()),
                ('years_used', models.IntegerField()),
                ('posted_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_images', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='OLX.ad_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarsAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Mobile', 'Mobile'), ('Properties', 'Properties'), ('Accessory', 'Accessory'), ('Car', 'Car'), ('Scooter', 'Scooter')])),
                ('ad_location', models.CharField(choices=[('Kerala', 'Kerala'), ('Karnataka', 'Karntaka'), ('Tamil Nadu', 'Tamil Nadu')])),
                ('price', models.PositiveIntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('brand', models.CharField(choices=[('Maruti Suzuki', 'Maruti Suzuki'), ('Hyundai', 'Hyundai'), ('Tata', 'Tata'), ('Mahindra', 'Mahindra'), ('Toyota', 'Toyota'), ('Honda', 'Honda'), ('Audi', 'Audi'), ('Bmw', 'Bmw'), ('Lexus', 'Lexus'), ('Porsche', 'Porsche')])),
                ('transmission_type', models.CharField(choices=[('Automatic', 'Automatic'), ('Manual', 'Manual')])),
                ('fuel_type', models.CharField(choices=[('CNG & Hybrids', 'CNG & Hybrids'), ('Diesel', 'Diesel'), ('Electric', 'Electric'), ('LPG', 'LPG'), ('Petrol', 'Petrol')])),
                ('no_of_owners', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('posted_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_images', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='OLX.ad_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessoryAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('category', models.CharField(choices=[('Mobile', 'Mobile'), ('Properties', 'Properties'), ('Accessory', 'Accessory'), ('Car', 'Car'), ('Scooter', 'Scooter')])),
                ('ad_location', models.CharField(choices=[('Kerala', 'Kerala'), ('Karnataka', 'Karntaka'), ('Tamil Nadu', 'Tamil Nadu')])),
                ('price', models.PositiveIntegerField()),
                ('date_created', models.DateField(auto_now_add=True)),
                ('type', models.CharField(choices=[('Mobile', 'Mobile'), ('Tablet', 'Tablet')])),
                ('posted_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_images', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='OLX.ad_images')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
